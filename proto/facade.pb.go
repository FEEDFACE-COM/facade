// Code generated by protoc-gen-go. DO NOT EDIT.
// source: facade.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BeamRequest struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BeamRequest) Reset()         { *m = BeamRequest{} }
func (m *BeamRequest) String() string { return proto.CompactTextString(m) }
func (*BeamRequest) ProtoMessage()    {}
func (*BeamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_facade_8b56071b9b09a167, []int{0}
}
func (m *BeamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BeamRequest.Unmarshal(m, b)
}
func (m *BeamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BeamRequest.Marshal(b, m, deterministic)
}
func (dst *BeamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BeamRequest.Merge(dst, src)
}
func (m *BeamRequest) XXX_Size() int {
	return xxx_messageInfo_BeamRequest.Size(m)
}
func (m *BeamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BeamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BeamRequest proto.InternalMessageInfo

func (m *BeamRequest) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type Response struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_facade_8b56071b9b09a167, []int{1}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*BeamRequest)(nil), "proto.BeamRequest")
	proto.RegisterType((*Response)(nil), "proto.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FacadeClient is the client API for Facade service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FacadeClient interface {
	BeamText(ctx context.Context, in *BeamRequest, opts ...grpc.CallOption) (*Response, error)
}

type facadeClient struct {
	cc *grpc.ClientConn
}

func NewFacadeClient(cc *grpc.ClientConn) FacadeClient {
	return &facadeClient{cc}
}

func (c *facadeClient) BeamText(ctx context.Context, in *BeamRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.Facade/BeamText", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FacadeServer is the server API for Facade service.
type FacadeServer interface {
	BeamText(context.Context, *BeamRequest) (*Response, error)
}

func RegisterFacadeServer(s *grpc.Server, srv FacadeServer) {
	s.RegisterService(&_Facade_serviceDesc, srv)
}

func _Facade_BeamText_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BeamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FacadeServer).BeamText(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Facade/BeamText",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FacadeServer).BeamText(ctx, req.(*BeamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Facade_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Facade",
	HandlerType: (*FacadeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BeamText",
			Handler:    _Facade_BeamText_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "facade.proto",
}

func init() { proto.RegisterFile("facade.proto", fileDescriptor_facade_8b56071b9b09a167) }

var fileDescriptor_facade_8b56071b9b09a167 = []byte{
	// 140 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0x4b, 0x4c, 0x4e,
	0x4c, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0x8a, 0x5c, 0xdc,
	0x4e, 0xa9, 0x89, 0xb9, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x42, 0x5c, 0x2c, 0x25,
	0xa9, 0x15, 0x25, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x60, 0xb6, 0x92, 0x0a, 0x17, 0x47,
	0x50, 0x6a, 0x71, 0x41, 0x7e, 0x5e, 0x71, 0xaa, 0x90, 0x04, 0x17, 0x7b, 0x71, 0x69, 0x72, 0x72,
	0x6a, 0x71, 0x31, 0x58, 0x09, 0x47, 0x10, 0x8c, 0x6b, 0x64, 0xcd, 0xc5, 0xe6, 0x06, 0x36, 0x5f,
	0xc8, 0x90, 0x8b, 0x03, 0x64, 0x64, 0x48, 0x6a, 0x45, 0x89, 0x90, 0x10, 0xc4, 0x36, 0x3d, 0x24,
	0x3b, 0xa4, 0xf8, 0xa1, 0x62, 0x30, 0x43, 0x95, 0x18, 0x92, 0xd8, 0xc0, 0x22, 0xc6, 0x80, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xc0, 0x87, 0x31, 0xc0, 0xa3, 0x00, 0x00, 0x00,
}
