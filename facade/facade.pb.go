// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.17.1
// source: facade.proto

package facade

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Mode int32

const (
	Mode_TERM  Mode = 0
	Mode_LINES Mode = 1
	Mode_WORDS Mode = 2
	Mode_TAGS  Mode = 3
	Mode_DRAFT Mode = 16
)

// Enum value maps for Mode.
var (
	Mode_name = map[int32]string{
		0:  "TERM",
		1:  "LINES",
		2:  "WORDS",
		3:  "TAGS",
		16: "DRAFT",
	}
	Mode_value = map[string]int32{
		"TERM":  0,
		"LINES": 1,
		"WORDS": 2,
		"TAGS":  3,
		"DRAFT": 16,
	}
)

func (x Mode) Enum() *Mode {
	p := new(Mode)
	*p = x
	return p
}

func (x Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_facade_proto_enumTypes[0].Descriptor()
}

func (Mode) Type() protoreflect.EnumType {
	return &file_facade_proto_enumTypes[0]
}

func (x Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Mode.Descriptor instead.
func (Mode) EnumDescriptor() ([]byte, []int) {
	return file_facade_proto_rawDescGZIP(), []int{0}
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facade_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_facade_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_facade_proto_rawDescGZIP(), []int{0}
}

type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
	Info    string `protobuf:"bytes,3,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facade_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_facade_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_facade_proto_rawDescGZIP(), []int{1}
}

func (x *Status) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *Status) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *Status) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type RawText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Raw []byte `protobuf:"bytes,1,opt,name=Raw,proto3" json:"Raw,omitempty"`
}

func (x *RawText) Reset() {
	*x = RawText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facade_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawText) ProtoMessage() {}

func (x *RawText) ProtoReflect() protoreflect.Message {
	mi := &file_facade_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawText.ProtoReflect.Descriptor instead.
func (*RawText) Descriptor() ([]byte, []int) {
	return file_facade_proto_rawDescGZIP(), []int{2}
}

func (x *RawText) GetRaw() []byte {
	if x != nil {
		return x.Raw
	}
	return nil
}

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SetDebug bool          `protobuf:"varint,1,opt,name=SetDebug,proto3" json:"SetDebug,omitempty"`
	Debug    bool          `protobuf:"varint,2,opt,name=Debug,proto3" json:"Debug,omitempty"`
	SetMode  bool          `protobuf:"varint,3,opt,name=SetMode,proto3" json:"SetMode,omitempty"`
	Mode     Mode          `protobuf:"varint,4,opt,name=Mode,proto3,enum=facade.Mode" json:"Mode,omitempty"`
	Font     *FontConfig   `protobuf:"bytes,5,opt,name=Font,proto3" json:"Font,omitempty"`
	Camera   *CameraConfig `protobuf:"bytes,6,opt,name=Camera,proto3" json:"Camera,omitempty"`
	Mask     *MaskConfig   `protobuf:"bytes,7,opt,name=Mask,proto3" json:"Mask,omitempty"`
	Terminal *TermConfig   `protobuf:"bytes,13,opt,name=Terminal,proto3" json:"Terminal,omitempty"`
	Lines    *LineConfig   `protobuf:"bytes,14,opt,name=Lines,proto3" json:"Lines,omitempty"`
	Words    *WordConfig   `protobuf:"bytes,15,opt,name=Words,proto3" json:"Words,omitempty"` //    TagConfig  Tags     = 16;
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facade_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_facade_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_facade_proto_rawDescGZIP(), []int{3}
}

func (x *Config) GetSetDebug() bool {
	if x != nil {
		return x.SetDebug
	}
	return false
}

func (x *Config) GetDebug() bool {
	if x != nil {
		return x.Debug
	}
	return false
}

func (x *Config) GetSetMode() bool {
	if x != nil {
		return x.SetMode
	}
	return false
}

func (x *Config) GetMode() Mode {
	if x != nil {
		return x.Mode
	}
	return Mode_TERM
}

func (x *Config) GetFont() *FontConfig {
	if x != nil {
		return x.Font
	}
	return nil
}

func (x *Config) GetCamera() *CameraConfig {
	if x != nil {
		return x.Camera
	}
	return nil
}

func (x *Config) GetMask() *MaskConfig {
	if x != nil {
		return x.Mask
	}
	return nil
}

func (x *Config) GetTerminal() *TermConfig {
	if x != nil {
		return x.Terminal
	}
	return nil
}

func (x *Config) GetLines() *LineConfig {
	if x != nil {
		return x.Lines
	}
	return nil
}

func (x *Config) GetWords() *WordConfig {
	if x != nil {
		return x.Words
	}
	return nil
}

type FontConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SetName bool   `protobuf:"varint,1,opt,name=SetName,proto3" json:"SetName,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *FontConfig) Reset() {
	*x = FontConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facade_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FontConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FontConfig) ProtoMessage() {}

func (x *FontConfig) ProtoReflect() protoreflect.Message {
	mi := &file_facade_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FontConfig.ProtoReflect.Descriptor instead.
func (*FontConfig) Descriptor() ([]byte, []int) {
	return file_facade_proto_rawDescGZIP(), []int{4}
}

func (x *FontConfig) GetSetName() bool {
	if x != nil {
		return x.SetName
	}
	return false
}

func (x *FontConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CameraConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SetZoom      bool    `protobuf:"varint,1,opt,name=SetZoom,proto3" json:"SetZoom,omitempty"`
	Zoom         float64 `protobuf:"fixed64,2,opt,name=Zoom,proto3" json:"Zoom,omitempty"`
	SetIsometric bool    `protobuf:"varint,3,opt,name=SetIsometric,proto3" json:"SetIsometric,omitempty"`
	Isometric    bool    `protobuf:"varint,4,opt,name=Isometric,proto3" json:"Isometric,omitempty"`
}

func (x *CameraConfig) Reset() {
	*x = CameraConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facade_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CameraConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CameraConfig) ProtoMessage() {}

func (x *CameraConfig) ProtoReflect() protoreflect.Message {
	mi := &file_facade_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CameraConfig.ProtoReflect.Descriptor instead.
func (*CameraConfig) Descriptor() ([]byte, []int) {
	return file_facade_proto_rawDescGZIP(), []int{5}
}

func (x *CameraConfig) GetSetZoom() bool {
	if x != nil {
		return x.SetZoom
	}
	return false
}

func (x *CameraConfig) GetZoom() float64 {
	if x != nil {
		return x.Zoom
	}
	return 0
}

func (x *CameraConfig) GetSetIsometric() bool {
	if x != nil {
		return x.SetIsometric
	}
	return false
}

func (x *CameraConfig) GetIsometric() bool {
	if x != nil {
		return x.Isometric
	}
	return false
}

type MaskConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SetName bool   `protobuf:"varint,1,opt,name=SetName,proto3" json:"SetName,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *MaskConfig) Reset() {
	*x = MaskConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facade_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaskConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaskConfig) ProtoMessage() {}

func (x *MaskConfig) ProtoReflect() protoreflect.Message {
	mi := &file_facade_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaskConfig.ProtoReflect.Descriptor instead.
func (*MaskConfig) Descriptor() ([]byte, []int) {
	return file_facade_proto_rawDescGZIP(), []int{6}
}

func (x *MaskConfig) GetSetName() bool {
	if x != nil {
		return x.SetName
	}
	return false
}

func (x *MaskConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ShaderConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SetVert bool   `protobuf:"varint,1,opt,name=SetVert,proto3" json:"SetVert,omitempty"`
	Vert    string `protobuf:"bytes,2,opt,name=Vert,proto3" json:"Vert,omitempty"`
	SetFrag bool   `protobuf:"varint,3,opt,name=SetFrag,proto3" json:"SetFrag,omitempty"`
	Frag    string `protobuf:"bytes,4,opt,name=Frag,proto3" json:"Frag,omitempty"`
}

func (x *ShaderConfig) Reset() {
	*x = ShaderConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facade_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShaderConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShaderConfig) ProtoMessage() {}

func (x *ShaderConfig) ProtoReflect() protoreflect.Message {
	mi := &file_facade_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShaderConfig.ProtoReflect.Descriptor instead.
func (*ShaderConfig) Descriptor() ([]byte, []int) {
	return file_facade_proto_rawDescGZIP(), []int{7}
}

func (x *ShaderConfig) GetSetVert() bool {
	if x != nil {
		return x.SetVert
	}
	return false
}

func (x *ShaderConfig) GetVert() string {
	if x != nil {
		return x.Vert
	}
	return ""
}

func (x *ShaderConfig) GetSetFrag() bool {
	if x != nil {
		return x.SetFrag
	}
	return false
}

func (x *ShaderConfig) GetFrag() string {
	if x != nil {
		return x.Frag
	}
	return ""
}

type TermConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shader *ShaderConfig `protobuf:"bytes,1,opt,name=Shader,proto3" json:"Shader,omitempty"`
	Grid   *GridConfig   `protobuf:"bytes,2,opt,name=Grid,proto3" json:"Grid,omitempty"`
}

func (x *TermConfig) Reset() {
	*x = TermConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facade_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TermConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TermConfig) ProtoMessage() {}

func (x *TermConfig) ProtoReflect() protoreflect.Message {
	mi := &file_facade_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TermConfig.ProtoReflect.Descriptor instead.
func (*TermConfig) Descriptor() ([]byte, []int) {
	return file_facade_proto_rawDescGZIP(), []int{8}
}

func (x *TermConfig) GetShader() *ShaderConfig {
	if x != nil {
		return x.Shader
	}
	return nil
}

func (x *TermConfig) GetGrid() *GridConfig {
	if x != nil {
		return x.Grid
	}
	return nil
}

type LineConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shader      *ShaderConfig `protobuf:"bytes,1,opt,name=Shader,proto3" json:"Shader,omitempty"`
	Grid        *GridConfig   `protobuf:"bytes,2,opt,name=Grid,proto3" json:"Grid,omitempty"`
	SetDownward bool          `protobuf:"varint,3,opt,name=SetDownward,proto3" json:"SetDownward,omitempty"`
	Downward    bool          `protobuf:"varint,4,opt,name=Downward,proto3" json:"Downward,omitempty"`
	SetSpeed    bool          `protobuf:"varint,5,opt,name=SetSpeed,proto3" json:"SetSpeed,omitempty"`
	Speed       float64       `protobuf:"fixed64,6,opt,name=Speed,proto3" json:"Speed,omitempty"`
	SetFixed    bool          `protobuf:"varint,7,opt,name=SetFixed,proto3" json:"SetFixed,omitempty"`
	Fixed       bool          `protobuf:"varint,8,opt,name=Fixed,proto3" json:"Fixed,omitempty"`
	SetDrop     bool          `protobuf:"varint,9,opt,name=SetDrop,proto3" json:"SetDrop,omitempty"`
	Drop        bool          `protobuf:"varint,10,opt,name=Drop,proto3" json:"Drop,omitempty"`
	SetSmooth   bool          `protobuf:"varint,11,opt,name=SetSmooth,proto3" json:"SetSmooth,omitempty"`
	Smooth      bool          `protobuf:"varint,12,opt,name=Smooth,proto3" json:"Smooth,omitempty"`
	SetBuffer   bool          `protobuf:"varint,13,opt,name=SetBuffer,proto3" json:"SetBuffer,omitempty"`
	Buffer      uint64        `protobuf:"varint,14,opt,name=Buffer,proto3" json:"Buffer,omitempty"`
}

func (x *LineConfig) Reset() {
	*x = LineConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facade_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LineConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LineConfig) ProtoMessage() {}

func (x *LineConfig) ProtoReflect() protoreflect.Message {
	mi := &file_facade_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LineConfig.ProtoReflect.Descriptor instead.
func (*LineConfig) Descriptor() ([]byte, []int) {
	return file_facade_proto_rawDescGZIP(), []int{9}
}

func (x *LineConfig) GetShader() *ShaderConfig {
	if x != nil {
		return x.Shader
	}
	return nil
}

func (x *LineConfig) GetGrid() *GridConfig {
	if x != nil {
		return x.Grid
	}
	return nil
}

func (x *LineConfig) GetSetDownward() bool {
	if x != nil {
		return x.SetDownward
	}
	return false
}

func (x *LineConfig) GetDownward() bool {
	if x != nil {
		return x.Downward
	}
	return false
}

func (x *LineConfig) GetSetSpeed() bool {
	if x != nil {
		return x.SetSpeed
	}
	return false
}

func (x *LineConfig) GetSpeed() float64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *LineConfig) GetSetFixed() bool {
	if x != nil {
		return x.SetFixed
	}
	return false
}

func (x *LineConfig) GetFixed() bool {
	if x != nil {
		return x.Fixed
	}
	return false
}

func (x *LineConfig) GetSetDrop() bool {
	if x != nil {
		return x.SetDrop
	}
	return false
}

func (x *LineConfig) GetDrop() bool {
	if x != nil {
		return x.Drop
	}
	return false
}

func (x *LineConfig) GetSetSmooth() bool {
	if x != nil {
		return x.SetSmooth
	}
	return false
}

func (x *LineConfig) GetSmooth() bool {
	if x != nil {
		return x.Smooth
	}
	return false
}

func (x *LineConfig) GetSetBuffer() bool {
	if x != nil {
		return x.SetBuffer
	}
	return false
}

func (x *LineConfig) GetBuffer() uint64 {
	if x != nil {
		return x.Buffer
	}
	return 0
}

type GridConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SetWidth  bool   `protobuf:"varint,1,opt,name=SetWidth,proto3" json:"SetWidth,omitempty"`
	Width     uint64 `protobuf:"varint,2,opt,name=Width,proto3" json:"Width,omitempty"`
	SetHeight bool   `protobuf:"varint,3,opt,name=SetHeight,proto3" json:"SetHeight,omitempty"`
	Height    uint64 `protobuf:"varint,4,opt,name=Height,proto3" json:"Height,omitempty"`
	SetFill   bool   `protobuf:"varint,5,opt,name=SetFill,proto3" json:"SetFill,omitempty"`
	Fill      string `protobuf:"bytes,6,opt,name=Fill,proto3" json:"Fill,omitempty"`
}

func (x *GridConfig) Reset() {
	*x = GridConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facade_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GridConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GridConfig) ProtoMessage() {}

func (x *GridConfig) ProtoReflect() protoreflect.Message {
	mi := &file_facade_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GridConfig.ProtoReflect.Descriptor instead.
func (*GridConfig) Descriptor() ([]byte, []int) {
	return file_facade_proto_rawDescGZIP(), []int{10}
}

func (x *GridConfig) GetSetWidth() bool {
	if x != nil {
		return x.SetWidth
	}
	return false
}

func (x *GridConfig) GetWidth() uint64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *GridConfig) GetSetHeight() bool {
	if x != nil {
		return x.SetHeight
	}
	return false
}

func (x *GridConfig) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *GridConfig) GetSetFill() bool {
	if x != nil {
		return x.SetFill
	}
	return false
}

func (x *GridConfig) GetFill() string {
	if x != nil {
		return x.Fill
	}
	return ""
}

type WordConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shader *ShaderConfig `protobuf:"bytes,1,opt,name=Shader,proto3" json:"Shader,omitempty"`
	Set    *SetConfig    `protobuf:"bytes,2,opt,name=Set,proto3" json:"Set,omitempty"`
}

func (x *WordConfig) Reset() {
	*x = WordConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facade_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WordConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WordConfig) ProtoMessage() {}

func (x *WordConfig) ProtoReflect() protoreflect.Message {
	mi := &file_facade_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WordConfig.ProtoReflect.Descriptor instead.
func (*WordConfig) Descriptor() ([]byte, []int) {
	return file_facade_proto_rawDescGZIP(), []int{11}
}

func (x *WordConfig) GetShader() *ShaderConfig {
	if x != nil {
		return x.Shader
	}
	return nil
}

func (x *WordConfig) GetSet() *SetConfig {
	if x != nil {
		return x.Set
	}
	return nil
}

type SetConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SetLifetime  bool    `protobuf:"varint,1,opt,name=SetLifetime,proto3" json:"SetLifetime,omitempty"`
	Lifetime     float64 `protobuf:"fixed64,2,opt,name=Lifetime,proto3" json:"Lifetime,omitempty"`
	SetWatermark bool    `protobuf:"varint,3,opt,name=SetWatermark,proto3" json:"SetWatermark,omitempty"`
	Watermark    float64 `protobuf:"fixed64,4,opt,name=Watermark,proto3" json:"Watermark,omitempty"`
	SetSlots     bool    `protobuf:"varint,5,opt,name=SetSlots,proto3" json:"SetSlots,omitempty"`
	Slots        uint64  `protobuf:"varint,6,opt,name=Slots,proto3" json:"Slots,omitempty"`
	SetShuffle   bool    `protobuf:"varint,7,opt,name=SetShuffle,proto3" json:"SetShuffle,omitempty"`
	Shuffle      bool    `protobuf:"varint,8,opt,name=Shuffle,proto3" json:"Shuffle,omitempty"`
	SetAging     bool    `protobuf:"varint,9,opt,name=SetAging,proto3" json:"SetAging,omitempty"`
	Aging        bool    `protobuf:"varint,10,opt,name=Aging,proto3" json:"Aging,omitempty"`
	SetFill      bool    `protobuf:"varint,11,opt,name=SetFill,proto3" json:"SetFill,omitempty"`
	Fill         string  `protobuf:"bytes,12,opt,name=Fill,proto3" json:"Fill,omitempty"`
}

func (x *SetConfig) Reset() {
	*x = SetConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facade_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConfig) ProtoMessage() {}

func (x *SetConfig) ProtoReflect() protoreflect.Message {
	mi := &file_facade_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConfig.ProtoReflect.Descriptor instead.
func (*SetConfig) Descriptor() ([]byte, []int) {
	return file_facade_proto_rawDescGZIP(), []int{12}
}

func (x *SetConfig) GetSetLifetime() bool {
	if x != nil {
		return x.SetLifetime
	}
	return false
}

func (x *SetConfig) GetLifetime() float64 {
	if x != nil {
		return x.Lifetime
	}
	return 0
}

func (x *SetConfig) GetSetWatermark() bool {
	if x != nil {
		return x.SetWatermark
	}
	return false
}

func (x *SetConfig) GetWatermark() float64 {
	if x != nil {
		return x.Watermark
	}
	return 0
}

func (x *SetConfig) GetSetSlots() bool {
	if x != nil {
		return x.SetSlots
	}
	return false
}

func (x *SetConfig) GetSlots() uint64 {
	if x != nil {
		return x.Slots
	}
	return 0
}

func (x *SetConfig) GetSetShuffle() bool {
	if x != nil {
		return x.SetShuffle
	}
	return false
}

func (x *SetConfig) GetShuffle() bool {
	if x != nil {
		return x.Shuffle
	}
	return false
}

func (x *SetConfig) GetSetAging() bool {
	if x != nil {
		return x.SetAging
	}
	return false
}

func (x *SetConfig) GetAging() bool {
	if x != nil {
		return x.Aging
	}
	return false
}

func (x *SetConfig) GetSetFill() bool {
	if x != nil {
		return x.SetFill
	}
	return false
}

func (x *SetConfig) GetFill() string {
	if x != nil {
		return x.Fill
	}
	return ""
}

var File_facade_proto protoreflect.FileDescriptor

var file_facade_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x66, 0x61, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x66, 0x61, 0x63, 0x61, 0x64, 0x65, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x4c, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x1b, 0x0a,
	0x07, 0x52, 0x61, 0x77, 0x54, 0x65, 0x78, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x61, 0x77, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x52, 0x61, 0x77, 0x22, 0xf8, 0x02, 0x0a, 0x06, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x44, 0x65, 0x62, 0x75,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x53, 0x65, 0x74, 0x44, 0x65, 0x62, 0x75,
	0x67, 0x12, 0x14, 0x0a, 0x05, 0x44, 0x65, 0x62, 0x75, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x44, 0x65, 0x62, 0x75, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x4d, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x65, 0x74, 0x4d, 0x6f, 0x64,
	0x65, 0x12, 0x20, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0c, 0x2e, 0x66, 0x61, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x46, 0x6f, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x66, 0x61, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x46, 0x6f, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x46, 0x6f, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x06, 0x43,
	0x61, 0x6d, 0x65, 0x72, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x66, 0x61,
	0x63, 0x61, 0x64, 0x65, 0x2e, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x06, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x12, 0x26, 0x0a, 0x04, 0x4d, 0x61, 0x73,
	0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x61, 0x63, 0x61, 0x64, 0x65,
	0x2e, 0x4d, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x4d, 0x61, 0x73,
	0x6b, 0x12, 0x2e, 0x0a, 0x08, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x61, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x54, 0x65, 0x72,
	0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x08, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61,
	0x6c, 0x12, 0x28, 0x0a, 0x05, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x66, 0x61, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x05, 0x57,
	0x6f, 0x72, 0x64, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x61, 0x63,
	0x61, 0x64, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05,
	0x57, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x3a, 0x0a, 0x0a, 0x46, 0x6f, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x7e, 0x0a, 0x0c, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x5a, 0x6f, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x53, 0x65, 0x74, 0x5a, 0x6f, 0x6f, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x5a,
	0x6f, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x5a, 0x6f, 0x6f, 0x6d, 0x12,
	0x22, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x49, 0x73, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x53, 0x65, 0x74, 0x49, 0x73, 0x6f, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x22, 0x3a, 0x0a, 0x0a, 0x4d, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x18, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x6a, 0x0a,
	0x0c, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a,
	0x07, 0x53, 0x65, 0x74, 0x56, 0x65, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x53, 0x65, 0x74, 0x56, 0x65, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x56, 0x65, 0x72, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x56, 0x65, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x53,
	0x65, 0x74, 0x46, 0x72, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x65,
	0x74, 0x46, 0x72, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x72, 0x61, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x46, 0x72, 0x61, 0x67, 0x22, 0x62, 0x0a, 0x0a, 0x54, 0x65, 0x72,
	0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2c, 0x0a, 0x06, 0x53, 0x68, 0x61, 0x64, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x66, 0x61, 0x63, 0x61, 0x64, 0x65,
	0x2e, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x53,
	0x68, 0x61, 0x64, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x04, 0x47, 0x72, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x61, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x47, 0x72, 0x69,
	0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x47, 0x72, 0x69, 0x64, 0x22, 0x9e, 0x03,
	0x0a, 0x0a, 0x4c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2c, 0x0a, 0x06,
	0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x66,
	0x61, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x06, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x04, 0x47, 0x72,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x61, 0x63, 0x61, 0x64,
	0x65, 0x2e, 0x47, 0x72, 0x69, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x47, 0x72,
	0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x77, 0x61, 0x72,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x53, 0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e,
	0x77, 0x61, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x6f, 0x77, 0x6e, 0x77, 0x61, 0x72, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x44, 0x6f, 0x77, 0x6e, 0x77, 0x61, 0x72, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x53, 0x65, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x53, 0x70, 0x65,
	0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x46, 0x69, 0x78, 0x65, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x53, 0x65, 0x74, 0x46, 0x69, 0x78, 0x65, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x46, 0x69, 0x78, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x46,
	0x69, 0x78, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x44, 0x72, 0x6f, 0x70, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x65, 0x74, 0x44, 0x72, 0x6f, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x44, 0x72, 0x6f, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x44, 0x72,
	0x6f, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x53, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x53, 0x65, 0x74, 0x53, 0x6d, 0x6f, 0x6f, 0x74, 0x68,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x53, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x42,
	0x75, 0x66, 0x66, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x53, 0x65, 0x74,
	0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x22, 0xa2,
	0x01, 0x0a, 0x0a, 0x47, 0x72, 0x69, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a,
	0x08, 0x53, 0x65, 0x74, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x53, 0x65, 0x74, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x57, 0x69, 0x64,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12,
	0x1c, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x53, 0x65, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46,
	0x69, 0x6c, 0x6c, 0x22, 0x5f, 0x0a, 0x0a, 0x57, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x2c, 0x0a, 0x06, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x66, 0x61, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x53, 0x68, 0x61, 0x64, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x23, 0x0a, 0x03, 0x53, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66,
	0x61, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x03, 0x53, 0x65, 0x74, 0x22, 0xd7, 0x02, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x4c, 0x69, 0x66, 0x65, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x53, 0x65, 0x74, 0x4c, 0x69, 0x66, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x69, 0x66, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x4c, 0x69, 0x66, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x57, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x53, 0x65, 0x74, 0x57, 0x61, 0x74, 0x65, 0x72,
	0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x57, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72,
	0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x57, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61,
	0x72, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x53, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x53,
	0x6c, 0x6f, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x53, 0x68, 0x75, 0x66, 0x66,
	0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x53, 0x65, 0x74, 0x53, 0x68, 0x75,
	0x66, 0x66, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x68, 0x75, 0x66, 0x66, 0x6c, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x68, 0x75, 0x66, 0x66, 0x6c, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x53, 0x65, 0x74, 0x41, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x53, 0x65, 0x74, 0x41, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x67,
	0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x41, 0x67, 0x69, 0x6e, 0x67,
	0x12, 0x18, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x53, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x69,
	0x6c, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46, 0x69, 0x6c, 0x6c, 0x2a, 0x3b,
	0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x45, 0x52, 0x4d, 0x10, 0x00,
	0x12, 0x09, 0x0a, 0x05, 0x4c, 0x49, 0x4e, 0x45, 0x53, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x57,
	0x4f, 0x52, 0x44, 0x53, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x41, 0x47, 0x53, 0x10, 0x03,
	0x12, 0x09, 0x0a, 0x05, 0x44, 0x52, 0x41, 0x46, 0x54, 0x10, 0x10, 0x32, 0x88, 0x01, 0x0a, 0x06,
	0x46, 0x61, 0x63, 0x61, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x0e,
	0x2e, 0x66, 0x61, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x0e,
	0x2e, 0x66, 0x61, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00,
	0x12, 0x2b, 0x0a, 0x04, 0x50, 0x69, 0x70, 0x65, 0x12, 0x0f, 0x2e, 0x66, 0x61, 0x63, 0x61, 0x64,
	0x65, 0x2e, 0x52, 0x61, 0x77, 0x54, 0x65, 0x78, 0x74, 0x1a, 0x0e, 0x2e, 0x66, 0x61, 0x63, 0x61,
	0x64, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x28, 0x01, 0x12, 0x27, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0d, 0x2e, 0x66, 0x61, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0e, 0x2e, 0x66, 0x61, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x42, 0x1c, 0x5a, 0x1a, 0x46, 0x45, 0x45, 0x44, 0x46, 0x41,
	0x43, 0x45, 0x2e, 0x43, 0x4f, 0x4d, 0x2f, 0x66, 0x61, 0x63, 0x61, 0x64, 0x65, 0x2f, 0x66, 0x61,
	0x63, 0x61, 0x64, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_facade_proto_rawDescOnce sync.Once
	file_facade_proto_rawDescData = file_facade_proto_rawDesc
)

func file_facade_proto_rawDescGZIP() []byte {
	file_facade_proto_rawDescOnce.Do(func() {
		file_facade_proto_rawDescData = protoimpl.X.CompressGZIP(file_facade_proto_rawDescData)
	})
	return file_facade_proto_rawDescData
}

var file_facade_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_facade_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_facade_proto_goTypes = []interface{}{
	(Mode)(0),            // 0: facade.Mode
	(*Empty)(nil),        // 1: facade.Empty
	(*Status)(nil),       // 2: facade.Status
	(*RawText)(nil),      // 3: facade.RawText
	(*Config)(nil),       // 4: facade.Config
	(*FontConfig)(nil),   // 5: facade.FontConfig
	(*CameraConfig)(nil), // 6: facade.CameraConfig
	(*MaskConfig)(nil),   // 7: facade.MaskConfig
	(*ShaderConfig)(nil), // 8: facade.ShaderConfig
	(*TermConfig)(nil),   // 9: facade.TermConfig
	(*LineConfig)(nil),   // 10: facade.LineConfig
	(*GridConfig)(nil),   // 11: facade.GridConfig
	(*WordConfig)(nil),   // 12: facade.WordConfig
	(*SetConfig)(nil),    // 13: facade.SetConfig
}
var file_facade_proto_depIdxs = []int32{
	0,  // 0: facade.Config.Mode:type_name -> facade.Mode
	5,  // 1: facade.Config.Font:type_name -> facade.FontConfig
	6,  // 2: facade.Config.Camera:type_name -> facade.CameraConfig
	7,  // 3: facade.Config.Mask:type_name -> facade.MaskConfig
	9,  // 4: facade.Config.Terminal:type_name -> facade.TermConfig
	10, // 5: facade.Config.Lines:type_name -> facade.LineConfig
	12, // 6: facade.Config.Words:type_name -> facade.WordConfig
	8,  // 7: facade.TermConfig.Shader:type_name -> facade.ShaderConfig
	11, // 8: facade.TermConfig.Grid:type_name -> facade.GridConfig
	8,  // 9: facade.LineConfig.Shader:type_name -> facade.ShaderConfig
	11, // 10: facade.LineConfig.Grid:type_name -> facade.GridConfig
	8,  // 11: facade.WordConfig.Shader:type_name -> facade.ShaderConfig
	13, // 12: facade.WordConfig.Set:type_name -> facade.SetConfig
	4,  // 13: facade.Facade.Conf:input_type -> facade.Config
	3,  // 14: facade.Facade.Pipe:input_type -> facade.RawText
	1,  // 15: facade.Facade.Info:input_type -> facade.Empty
	2,  // 16: facade.Facade.Conf:output_type -> facade.Status
	2,  // 17: facade.Facade.Pipe:output_type -> facade.Status
	2,  // 18: facade.Facade.Info:output_type -> facade.Status
	16, // [16:19] is the sub-list for method output_type
	13, // [13:16] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_facade_proto_init() }
func file_facade_proto_init() {
	if File_facade_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_facade_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facade_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facade_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facade_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facade_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FontConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facade_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CameraConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facade_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaskConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facade_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShaderConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facade_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TermConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facade_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LineConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facade_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GridConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facade_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WordConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facade_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_facade_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_facade_proto_goTypes,
		DependencyIndexes: file_facade_proto_depIdxs,
		EnumInfos:         file_facade_proto_enumTypes,
		MessageInfos:      file_facade_proto_msgTypes,
	}.Build()
	File_facade_proto = out.File
	file_facade_proto_rawDesc = nil
	file_facade_proto_goTypes = nil
	file_facade_proto_depIdxs = nil
}
